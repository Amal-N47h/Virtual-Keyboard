{"ast":null,"code":"var _jsxFileName = \"/home/jacksparrow/Arch/React/my-app/src/VirtualKeyboard.js\",\n  _s = $RefreshSig$();\n// src/VirtualKeyboard.js\nimport React, { useState } from 'react';\nimport './VirtualKeyboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst keys = [['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'], ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'], ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'], ['z', 'x', 'c', 'v', 'b', 'n', 'm'], ['Space', 'Backspace']];\nconst VirtualKeyboard = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const handleClick = key => {\n    if (key === 'Backspace') {\n      setInput(input.slice(0, -1));\n    } else if (key === 'Space') {\n      setInput(input + ' ');\n    } else {\n      setInput(input + key);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"virtual-keyboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: keys.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard-row\",\n        children: row.map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick(key),\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(VirtualKeyboard, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c = VirtualKeyboard;\nexport default VirtualKeyboard;\nvar _c;\n$RefreshReg$(_c, \"VirtualKeyboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","keys","VirtualKeyboard","_s","input","setInput","handleClick","key","slice","className","children","type","value","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","map","row","rowIndex","onClick","_c","$RefreshReg$"],"sources":["/home/jacksparrow/Arch/React/my-app/src/VirtualKeyboard.js"],"sourcesContent":["// src/VirtualKeyboard.js\nimport React, { useState } from 'react';\nimport './VirtualKeyboard.css';\n\nconst keys = [\n  ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n  ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n  ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'],\n  ['z', 'x', 'c', 'v', 'b', 'n', 'm'],\n  ['Space', 'Backspace']\n];\n\nconst VirtualKeyboard = () => {\n  const [input, setInput] = useState('');\n\n  const handleClick = (key) => {\n    if (key === 'Backspace') {\n      setInput(input.slice(0, -1));\n    } else if (key === 'Space') {\n      setInput(input + ' ');\n    } else {\n      setInput(input + key);\n    }\n  };\n\n  return (\n    <div className=\"virtual-keyboard\">\n      <input type=\"text\" value={input} readOnly />\n      <div className=\"keyboard\">\n        {keys.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"keyboard-row\">\n            {row.map((key) => (\n              <button key={key} onClick={() => handleClick(key)}>\n                {key}\n              </button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default VirtualKeyboard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAI,GAAG,CACX,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAClD,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAClD,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC7C,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACnC,CAAC,OAAO,EAAE,WAAW,CAAC,CACvB;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,WAAW,GAAIC,GAAG,IAAK;IAC3B,IAAIA,GAAG,KAAK,WAAW,EAAE;MACvBF,QAAQ,CAACD,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM,IAAID,GAAG,KAAK,OAAO,EAAE;MAC1BF,QAAQ,CAACD,KAAK,GAAG,GAAG,CAAC;IACvB,CAAC,MAAM;MACLC,QAAQ,CAACD,KAAK,GAAGG,GAAG,CAAC;IACvB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKS,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BV,OAAA;MAAOW,IAAI,EAAC,MAAM;MAACC,KAAK,EAAER,KAAM;MAACS,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CjB,OAAA;MAAKS,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBT,IAAI,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACtBpB,OAAA;QAAoBS,SAAS,EAAC,cAAc;QAAAC,QAAA,EACzCS,GAAG,CAACD,GAAG,CAAEX,GAAG,iBACXP,OAAA;UAAkBqB,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAACC,GAAG,CAAE;UAAAG,QAAA,EAC/CH;QAAG,GADOA,GAAG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACT;MAAC,GALMG,QAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CA7BID,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}